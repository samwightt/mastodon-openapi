openapi: 3.1.0
x-stoplight:
  id: cc3pgc7osi9i0
info:
  title: Mastodon API
  version: '1.0'
  contact:
    name: None
  description: The API for interacting with Mastodon.
servers:
  - url: 'http://localhost:3000'
paths:
  /api/v1/apps:
    post:
      summary: Create an application
      responses:
        '200':
          description: 'Store the client_id and client_secret in your cache, as these will be used to obtain OAuth tokens.'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Application.yaml
                  - $ref: ../models/Client-Credentials.yaml
                  - type: object
                    properties:
                      id:
                        type: string
                        description: The ID of the application.
                    required:
                      - id
              examples:
                Example 1:
                  value:
                    id: '563419'
                    name: test app
                    website: null
                    redirect_uri: 'urn:ietf:wg:oauth:2.0:oob'
                    client_id: TWhM-tNSuncnqN7DBJmoyeLnk6K3iJJ71KKXxgL1hPM
                    client_secret: ZEaFUFmF0umgBX1qKJDjaU99Q31lDkOU8NutzTOoliw
                    vapid_key: BCk-QqERU0q-CfYZjcuB6lnyyOYfJ2AifKqfeGIm7Z-HiTU5T9eTG5GxVA0_OH5mMlI4UkkDTpaZwozy0TzdZ2M=
        '422':
          description: 'If a required parameter is missing or improperly formatted, the request will fail.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      operationId: post-api-v1-apps
      description: Create a new application to obtain OAuth2 credentials.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                client_name:
                  type: string
                redirect_uris:
                  format: uri
                  oneOf:
                    - format: uri
                      description: Use a URL to redirect the user to a web page after authorization.
                    - enum:
                        - 'urn:ietf:wg:oauth:2.0:oob'
                      description: Pass this constant to display the authorization code to the user instead of redirecting to a web page.
                  description: 'Where the user should be redirected after authorization. Called this because it''s apparently possible to pass multiple redirect_uris, but is documented nowhere on what syntax you need to use.'
                  type: string
                scopes:
                  type: string
                  description: Space separated list of scopes.
                  default: read
                website:
                  type: string
                  format: uri
                  description: A URL to the homepage of your app.
              required:
                - client_name
                - redirect_uris
      tags:
        - Applications
components:
  schemas: {}
  requestBodies: {}
tags:
  - name: Applications
